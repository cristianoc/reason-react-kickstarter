// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Network$ReactTemplate = require("../repo/Network.bs.js");

function PostsComponent$PostsViewComponent(Props) {
  var posts = Props.posts;
  return React.createElement("div", undefined, React.createElement("li", undefined, $$Array.of_list(List.map((function (post) {
                            return React.createElement("ul", {
                                        key: String(post[/* id */0])
                                      }, React.createElement("h1", undefined, post[/* title */1]));
                          }), posts))));
}

var PostsViewComponent = {
  make: PostsComponent$PostsViewComponent
};

function PostsComponent$PostsComponent(Props) {
  var match = React.useState((function () {
          return /* Init */0;
        }));
  var setState = match[1];
  var state = match[0];
  React.useEffect((function () {
          Curry._1(setState, (function (param) {
                  return /* Loading */1;
                }));
          Network$ReactTemplate.fetchPosts(/* () */0).then((function (result) {
                    return Promise.resolve(Curry._1(setState, (function (param) {
                                      return /* Success */[result];
                                    })));
                  })).catch((function (_error) {
                  return Promise.resolve(Curry._1(setState, (function (param) {
                                    return /* Error */2;
                                  })));
                }));
          return ;
        }), ([]));
  var tmp;
  if (typeof state === "number") {
    switch (state) {
      case /* Init */0 :
          tmp = React.createElement("div", undefined, "Init");
          break;
      case /* Loading */1 :
          tmp = React.createElement("div", undefined, "Loading");
          break;
      case /* Error */2 :
          tmp = React.createElement("div", undefined, "Error...");
          break;
      
    }
  } else {
    tmp = React.createElement(PostsComponent$PostsViewComponent, {
          posts: state[0]
        });
  }
  return React.createElement("div", undefined, tmp);
}

var PostsComponent = {
  make: PostsComponent$PostsComponent
};

exports.PostsViewComponent = PostsViewComponent;
exports.PostsComponent = PostsComponent;
/* react Not a pure module */
